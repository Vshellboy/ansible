- name: 下载cfssl工具
  get_url:
    url: https://pkg.cfssl.org/R1.2/{{item.src}}
    dest: /bin/{{item.dest}}
    mode: 0755
  with_items:
  - {src: cfssl_linux-amd64,dest: cfssl}
  - {src: cfssljson_linux-amd64,dest: cfssljson}
  - {src: cfssl-certinfo_linux-amd64,dest: cfssl_certinfo}

- name: 在 etcd 节点创建 etcd 相关目录
  file: 
    name: "{{ ssl_dir }}"
    state: directory

- name: 准备CA签名、CA配置到第一个节点
  template: src={{ item }}.j2 dest={{ ssl_dir }}/{{ item }}
  with_items:
  - ca-csr.json
  - ca-config.json
  when: inventory_hostname == ansible_play_batch[0]

- name: etcd的证书签名请求到各个节点
  template: src={{ item }}.j2 dest={{ ssl_dir }}/{{ item }}
  with_items:
  - etcd-csr.json


# 获取密钥状态,为了幂等性
- name: 读取 ca 证书私钥 stat 信息
  stat: 
    path: "{{ ssl_dir }}/ca.pem"
  register: etcd_ca_key_stat
  delegate_to: "{{ groups['etcd'][0] }}"
  # delegate_to: ansible_play_batch[0]


- name: 如果没有ca，就生成 CA,第一个节点执行
  shell: "cd {{ ssl_dir }} && cfssl gencert -initca ca-csr.json | cfssljson -bare ca"
  when: 
  - etcd_ca_key_stat.stat.isreg is not defined
  - inventory_hostname == ansible_play_batch[0]

- name: 获取 etcd 根证书相关文件,第一个节点执行
  slurp:
    src: "{{ ssl_dir }}/{{ item }}" 
  with_items:
  - ca.pem
  - ca-key.pem
  - ca-config.json
  register: etcd_certs
  delegate_to: "{{ groups['etcd'][0] }}"
  run_once: true
#- name: debug
#  debug: msg={{item.source}}
#  with_items: "{{ etcd_certs.results }}"

- name: 分发 ca 根证书相关文件到 etcd 节点
  copy:
    dest: "{{ item.source }}"
    content: "{{ item.content | b64decode }}"
    owner: root
    group: root
    mode: 0644
  no_log: true
  with_items: "{{ etcd_certs.results }}"
  when: 
  - inventory_hostname != groups['etcd'][0] 

- name: 读取 etcd-key 证书私钥 stat 信息
  stat:
    path: "{{ ssl_dir }}/etcd.pem"
  register: etcd_key_stat

- name: 创建 etcd证书和私钥
  shell: "cfssl gencert \
        -ca=ca.pem \
        -ca-key=ca-key.pem \
        -config=ca-config.json \
        -profile=kubernetes etcd-csr.json | cfssljson -bare etcd"
  args:
    chdir: "{{ ssl_dir }}"
  when:
  - etcd_key_stat.stat.isreg is not defined
